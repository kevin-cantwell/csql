// Code generated by "stringer -type=Token"; DO NOT EDIT.

package csql

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NONE-0]
	_ = x[EOF-1]
	_ = x[WS-2]
	_ = x[ASTERISK-3]
	_ = x[COMMA-4]
	_ = x[DOT-5]
	_ = x[LPAREN-6]
	_ = x[RPAREN-7]
	_ = x[LBRACKET-8]
	_ = x[RBRACKET-9]
	_ = x[EXCLAIM-10]
	_ = x[EQUALS-11]
	_ = x[LT-12]
	_ = x[GT-13]
	_ = x[PLUS-14]
	_ = x[MINUS-15]
	_ = x[SLASH-16]
	_ = x[PERCENT-17]
	_ = x[SEMICOLON-18]
	_ = x[SELECT-19]
	_ = x[DISTINCT-20]
	_ = x[COUNT-21]
	_ = x[SUM-22]
	_ = x[MAX-23]
	_ = x[MIN-24]
	_ = x[AVG-25]
	_ = x[AS-26]
	_ = x[FROM-27]
	_ = x[WHERE-28]
	_ = x[AND-29]
	_ = x[OR-30]
	_ = x[NOT-31]
	_ = x[IN-32]
	_ = x[IS-33]
	_ = x[BETWEEN-34]
	_ = x[WITHIN-35]
	_ = x[GROUP-36]
	_ = x[BY-37]
	_ = x[LIMIT-38]
	_ = x[NULL-39]
	_ = x[TRUE-40]
	_ = x[FALSE-41]
	_ = x[STRING-42]
	_ = x[NUMERIC-43]
	_ = x[IDENT-44]
}

const _Token_name = "NONEEOFWSASTERISKCOMMADOTLPARENRPARENLBRACKETRBRACKETEXCLAIMEQUALSLTGTPLUSMINUSSLASHPERCENTSEMICOLONSELECTDISTINCTCOUNTSUMMAXMINAVGASFROMWHEREANDORNOTINISBETWEENWITHINGROUPBYLIMITNULLTRUEFALSESTRINGNUMERICIDENT"

var _Token_index = [...]uint8{0, 4, 7, 9, 17, 22, 25, 31, 37, 45, 53, 60, 66, 68, 70, 74, 79, 84, 91, 100, 106, 114, 119, 122, 125, 128, 131, 133, 137, 142, 145, 147, 150, 152, 154, 161, 167, 172, 174, 179, 183, 187, 192, 198, 205, 210}

func (i Token) String() string {
	if i < 0 || i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
